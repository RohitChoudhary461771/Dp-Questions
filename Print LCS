
class Solution
{
	public:
		vector<string> all_longest_common_subsequences(string s, string t)
		{
		    int n=s.length();
		    int m=t.length();
		    vector<vector<int>>dp(n+1,vector<int>(m+1,0));
		    
		    for(int i=1;i<=n;i++){
		        for(int j=1;j<=m;j++){
		            if(s[i-1]==t[j-1]){
		                dp[i][j]=1+dp[i-1][j-1];
		            }
		            else{
		                dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
		            }
		        }
		    }
		    int len=dp[n][m];
		    
		    vector<string>st(len);
		    int i=n,j=m;
		    while(i!=0 && j!=0){
		        if(s[i-1]==t[j-1]){
		            st[len-1]=s[i-1];
		            len--;
		            i--;
		            j--;
		        }
		        else if(dp[i][j-1]>=dp[i-1][j]){
		            j--;
		        }
		        else{
		            i--;
		        }
		    }
		    reverse(st.begin(),st.end());
		    return st;
		}
};
