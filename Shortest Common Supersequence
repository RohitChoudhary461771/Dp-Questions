class Solution {
public:
    string shortestCommonSupersequence(string str1, string str2) {
        int n=str1.length();
        int m=str2.length();

        vector<vector<int>>dp(n+1,vector<int>(m+1,0));
//ðŸ‘‰ Tabulation	    

		    for(int i=1;i<=n;i++){
		        for(int j=1;j<=m;j++){
		            if(str1[i-1]==str2[j-1]){
		                dp[i][j]=1+dp[i-1][j-1];
		            }
		            else{
		                dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
		            }
		        }
		    }
		    int len=dp[n][m];
		    string st="";

//ðŸ‘‰  Generating sequence.

		    int i=n,j=m;
		    while(i>0 && j>0){
		        if(str1[i-1]==str2[j-1]){
		            st+=str1[i-1];
		            i--;
		            j--;
		        }
		        else if(dp[i][j-1]>dp[i-1][j]){//if left block >up block
								st+=str2[j-1];
		            j--;
		        }
		        else{
							st+=str1[i-1];
		            i--;
		        }
		    }
				while(i>0){
					st+=str1[i-1];
					i--;
				}

				while(j>0){
					st+=str2[j-1];
					j--;
				}

		    reverse(st.begin(),st.end());
		    return st;
    }
};
