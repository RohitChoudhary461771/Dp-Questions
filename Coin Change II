class Solution {
public:
    int f(int amount,vector<int>& coins,int n,vector<vector<int>>&dp){
      
    // if(amount==0)return 0;
        if(n==0){
            if(amount%coins[0]==0)return 1;
            return 0;
        }
        if(dp[n][amount]!=-1)return dp[n][amount];

        int ntake=f(amount,coins,n-1,dp);
        int take=0;
        if(coins[n]<=amount){
            take=f(amount-coins[n],coins,n,dp);
        }
        return dp[n][amount]=take+ntake;
    }

    int change(int amount, vector<int>& coins) {
        int n=coins.size();
    //ðŸ‘‰ memoize.
        vector<vector<int>>dp(n,vector<int>(amount+1,-1));
        return f(amount,coins,n-1,dp);
    }
};
